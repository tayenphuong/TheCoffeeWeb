@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>The Coffee - Tạo đơn hàng</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <!-- Custom CSS -->
    <link href="styles.css" rel="stylesheet">

    <style>
        :root {
            --coffee-primary: #8b4513;
            --coffee-secondary: #d4a574;
            --coffee-accent: #ffc107;
        }

        body {
            background-color: #f8f9fa;
            padding-top: 70px;
        }

        .order-type-card {
            border: 2px solid #e9ecef;
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
            background: white;
        }

            .order-type-card:hover {
                border-color: var(--coffee-accent);
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            }

            .order-type-card.selected {
                border-color: var(--coffee-primary);
                background-color: #f8f9fa;
                box-shadow: 0 0 0 3px rgba(139, 69, 19, 0.1);
            }

        .product-card {
            border: none;
            border-radius: 12px;
            overflow: hidden;
            transition: all 0.3s ease;
            cursor: pointer;
            height: 100%;
        }

            .product-card:hover {
                transform: translateY(-4px);
                box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
            }

            .product-card img {
                height: 200px;
                object-fit: cover;
            }

        .cart-items {
            max-height: 400px;
            overflow-y: auto;
        }

        .cart-item {
            padding: 12px;
            border-bottom: 1px solid #f0f0f0;
        }

        .mobile-cart-btn {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 60px;
            height: 60px;
            border-radius: 50%;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            z-index: 1000;
        }

        .category-btn.active {
            background-color: var(--coffee-primary) !important;
            color: white !important;
        }

        .fade-in {
            animation: fadeIn 0.5s ease-in;
        }
    </style>
</head>
<body>
    <!-- Header -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">
        <div class="container-fluid">
            <a class="navbar-brand d-flex align-items-center" href="#">
                <i class="bi bi-cup-hot text-warning me-2" style="font-size: 1.8rem;"></i>
                <span class="fw-bold">The Coffee Admin</span>
            </a>
            <div class="d-flex align-items-center text-white">
                <span class="me-3">
                    <i class="bi bi-person-circle me-1"></i>
                    Admin User
                </span>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="container-fluid mt-3">
        <div class="row">
            <!-- Sidebar Categories -->
            <div class="col-lg-2 col-md-3 d-none d-md-block">
                <div class="card sticky-top" style="top: 80px;">
                    <div class="card-body">
                        <h6 class="fw-bold mb-3 text-muted">DANH MỤC</h6>
                        <div class="list-group list-group-flush">
                            <button class="list-group-item list-group-item-action category-btn active"
                                    onclick="filterByCategory('all')">
                                <i class="bi bi-grid me-2"></i>Tất cả
                            </button>
                            <button class="list-group-item list-group-item-action category-btn"
                                    onclick="filterByCategory('coffee')">
                                <i class="bi bi-cup-hot me-2"></i>Cà phê
                            </button>
                            <button class="list-group-item list-group-item-action category-btn"
                                    onclick="filterByCategory('tea')">
                                <i class="bi bi-cup-straw me-2"></i>Trà
                            </button>
                            <button class="list-group-item list-group-item-action category-btn"
                                    onclick="filterByCategory('pastry')">
                                <i class="bi bi-cake me-2"></i>Bánh ngọt
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Main Content Area -->
            <div class="col-lg-7 col-md-9">
                <!-- Order Type Selection -->
                <div class="card mb-4">
                    <div class="card-body">
                        <h5 class="card-title mb-3">
                            <i class="bi bi-clipboard-check text-primary me-2"></i>
                            Chọn loại đơn hàng
                        </h5>
                        <div class="row g-3">
                            <div class="col-md-4">
                                <div class="order-type-card" onclick="selectOrderType('dine-in')">
                                    <div class="text-center p-3">
                                        <i class="bi bi-house-door display-6 text-success"></i>
                                        <h6 class="mt-2 mb-0">Tại quán</h6>
                                        <small class="text-muted">Dine In</small>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="order-type-card" onclick="selectOrderType('takeaway')">
                                    <div class="text-center p-3">
                                        <i class="bi bi-bag display-6 text-warning"></i>
                                        <h6 class="mt-2 mb-0">Mang đi</h6>
                                        <small class="text-muted">Take Away</small>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="order-type-card" onclick="selectOrderType('delivery')">
                                    <div class="text-center p-3">
                                        <i class="bi bi-truck display-6 text-info"></i>
                                        <h6 class="mt-2 mb-0">Giao hàng</h6>
                                        <small class="text-muted">Delivery</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Search Bar -->
                <div class="mb-4">
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="bi bi-search"></i>
                        </span>
                        <input type="text" class="form-control" placeholder="Tìm kiếm sản phẩm..."
                               id="searchInput" oninput="searchProducts()">
                    </div>
                </div>

                <!-- Products Grid -->
                <div id="productsGrid" class="row g-3">
                    <!-- Products will be loaded here -->
                </div>
            </div>

            <!-- Order Summary Sidebar -->
            <div class="col-lg-3 d-none d-lg-block">
                <div class="card sticky-top" style="top: 80px;">
                    <div class="card-header bg-primary text-white">
                        <h6 class="mb-0">
                            <i class="bi bi-cart3 me-2"></i>
                            Đơn hàng
                            <span class="badge bg-light text-dark ms-2" id="cartItemCount">0</span>
                        </h6>
                    </div>
                    <div class="card-body p-0">
                        <!-- Order Type Display -->
                        <div id="selectedOrderType" class="p-3 bg-light border-bottom d-none">
                            <small class="text-muted">Loại đơn:</small>
                            <div class="fw-bold" id="orderTypeDisplay"></div>
                        </div>

                        <!-- Cart Items -->
                        <div id="cartItems" class="cart-items">
                            <div class="text-center py-4 text-muted">
                                <i class="bi bi-cart3" style="font-size: 2rem;"></i>
                                <p class="mt-2 mb-0">Chưa có sản phẩm nào</p>
                            </div>
                        </div>

                        <!-- Cart Summary -->
                        <div id="cartSummary" class="p-3 border-top d-none">
                            <div class="d-flex justify-content-between mb-2">
                                <span>Tạm tính:</span>
                                <span id="subtotal">0₫</span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span>Thuế (8%):</span>
                                <span id="tax">0₫</span>
                            </div>
                            <hr>
                            <div class="d-flex justify-content-between fw-bold">
                                <span>Tổng cộng:</span>
                                <span class="text-primary" id="total">0₫</span>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <button class="btn btn-success w-100" id="createOrderBtn"
                                onclick="createOrder()" disabled>
                            <i class="bi bi-plus-circle me-2"></i>
                            Tạo đơn hàng
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Mobile Cart Button -->
    <div class="d-lg-none">
        <button class="btn btn-primary mobile-cart-btn" data-bs-toggle="modal" data-bs-target="#mobileCartModal">
            <i class="bi bi-cart3"></i>
            <span class="badge bg-light text-dark ms-1" id="mobileCartCount">0</span>
        </button>
    </div>

    <!-- Mobile Cart Modal -->
    <div class="modal fade" id="mobileCartModal" tabindex="-1">
        <div class="modal-dialog modal-fullscreen-sm-down">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="bi bi-cart3 me-2"></i>Đơn hàng
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body p-0">
                    <div id="mobileCartItems" class="cart-items">
                        <div class="text-center py-4 text-muted">
                            <i class="bi bi-cart3" style="font-size: 2rem;"></i>
                            <p class="mt-2 mb-0">Chưa có sản phẩm nào</p>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-success w-100" onclick="createOrder()">
                        <i class="bi bi-plus-circle me-2"></i>
                        Tạo đơn hàng
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Success Modal -->
    <div class="modal fade" id="successModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body text-center py-4">
                    <i class="bi bi-check-circle-fill text-success" style="font-size: 4rem;"></i>
                    <h4 class="mt-3 mb-2">Đơn hàng đã được tạo thành công!</h4>
                    <p class="text-muted">Mã đơn hàng: <strong id="newOrderId"></strong></p>
                    <div class="mt-4">
                        <button type="button" class="btn btn-success" onclick="createNewOrder()">
                            <i class="bi bi-plus-circle me-2"></i>Tạo đơn mới
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <footer class="bg-dark text-white py-5 mt-5">
        <div class="container">
            <div class="row">
                <div class="col-md-4">
                    <div class="d-flex align-items-center mb-3">
                        <i class="bi bi-cup-hot text-warning me-2" style="font-size: 1.5rem;"></i>
                        <h5 class="mb-0">The Coffee</h5>
                    </div>
                    <p class="text-muted">Mang đến cho bạn những ly cà phê tuyệt vời nhất với chất lượng cao nhất.</p>
                </div>
                <div class="col-md-4">
                    <h6 class="fw-bold mb-3">Liên kết</h6>
                    <ul class="list-unstyled">
                        <li><a href="#" class="text-muted text-decoration-none">Thực đơn</a></li>
                        <li><a href="#" class="text-muted text-decoration-none">Về chúng tôi</a></li>
                        <li><a href="#" class="text-muted text-decoration-none">Liên hệ</a></li>
                    </ul>
                </div>
                <div class="col-md-4">
                    <h6 class="fw-bold mb-3">Liên hệ</h6>
                    <div class="text-muted">
                        <p><i class="bi bi-geo-alt me-2"></i>123 Đường ABC, Quận 1, TP.HCM</p>
                        <p><i class="bi bi-telephone me-2"></i>(028) 1234 5678</p>
                        <p><i class="bi bi-envelope me-2"></i>info@thecoffee.com</p>
                    </div>
                </div>
            </div>
            <hr class="my-4">
            <div class="text-center text-muted">
                <p>&copy; 2024 The Coffee. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Custom JS -->
    <script src="script.js"></script>

    <script>
        // Global Variables
        let selectedOrderType = null;
        let currentCategory = 'all';
        let cart = [];

        // Mock Products Data
        const products = [
            {
                id: 'P001',
                name: 'Espresso',
                category: 'coffee',
                price: 35000,
                image: 'https://images.unsplash.com/photo-1510707577719-ae7c14805e3a?w=300&h=200&fit=crop',
                description: 'Cà phê espresso đậm đà'
            },
            {
                id: 'P002',
                name: 'Cappuccino',
                category: 'coffee',
                price: 45000,
                image: 'https://images.unsplash.com/photo-1572442388796-11668a67e53d?w=300&h=200&fit=crop',
                description: 'Cappuccino với foam mịn màng'
            },
            {
                id: 'P003',
                name: 'Americano',
                category: 'coffee',
                price: 40000,
                image: 'https://images.unsplash.com/photo-1551030173-122aabc4489c?w=300&h=200&fit=crop',
                description: 'Cà phê Americano nhẹ nhàng'
            },
            {
                id: 'P004',
                name: 'Latte',
                category: 'coffee',
                price: 50000,
                image: 'https://images.unsplash.com/photo-1561047029-3000c68339ca?w=300&h=200&fit=crop',
                description: 'Latte với latte art đẹp mắt'
            },
            {
                id: 'P005',
                name: 'Trà xanh',
                category: 'tea',
                price: 30000,
                image: 'https://images.unsplash.com/photo-1556679343-c7306c1976bc?w=300&h=200&fit=crop',
                description: 'Trà xanh thơm mát'
            },
            {
                id: 'P006',
                name: 'Trà sữa',
                category: 'tea',
                price: 35000,
                image: 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=300&h=200&fit=crop',
                description: 'Trà sữa trân châu'
            },
            {
                id: 'P007',
                name: 'Croissant',
                category: 'pastry',
                price: 25000,
                image: 'https://images.unsplash.com/photo-1555507036-ab794f4afe5e?w=300&h=200&fit=crop',
                description: 'Bánh croissant bơ thơm'
            },
            {
                id: 'P008',
                name: 'Cheesecake',
                category: 'pastry',
                price: 55000,
                image: 'https://images.unsplash.com/photo-1567306226416-28f0efdc88ce?w=300&h=200&fit=crop',
                description: 'Bánh cheesecake mềm mịn'
            }
        ];

        // Initialize
        document.addEventListener('DOMContentLoaded', () => {
            displayProducts();
            updateCartDisplay();
        });

        // Select Order Type
        function selectOrderType(type) {
            selectedOrderType = type;

            document.querySelectorAll('.order-type-card').forEach(card => {
                card.classList.remove('selected');
            });

            event.currentTarget.classList.add('selected');

            const orderTypeNames = {
                'dine-in': 'Tại quán',
                'takeaway': 'Mang đi',
                'delivery': 'Giao hàng'
            };

            document.getElementById('selectedOrderType').classList.remove('d-none');
            document.getElementById('orderTypeDisplay').textContent = orderTypeNames[type];

            updateCreateOrderButton();
        }

        // Filter by Category
        function filterByCategory(category) {
            currentCategory = category;

            document.querySelectorAll('.category-btn').forEach(btn => {
                btn.classList.remove('active');
            });

            event.currentTarget.classList.add('active');

            displayProducts();
        }

        // Display Products
        function displayProducts() {
            const filteredProducts = filterProducts();
            const productsGrid = document.getElementById('productsGrid');

            productsGrid.innerHTML = filteredProducts.map(product => createProductCard(product)).join('');
            productsGrid.classList.add('fade-in');
        }

        // Filter Products
        function filterProducts() {
            let filtered = products;

            if (currentCategory !== 'all') {
                filtered = filtered.filter(product => product.category === currentCategory);
            }

            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            if (searchTerm) {
                filtered = filtered.filter(product =>
                    product.name.toLowerCase().includes(searchTerm) ||
                    product.description.toLowerCase().includes(searchTerm)
                );
            }

            return filtered;
        }

        // Create Product Card
        function createProductCard(product) {
            return `
                    <div class="col-lg-4 col-md-6 col-sm-6">
                        <div class="card product-card" onclick="addToCart('${product.id}')">
                            <img src="${product.image}" class="card-img-top" alt="${product.name}">
                            <div class="card-body">
                                <h6 class="card-title mb-2">${product.name}</h6>
                                <p class="card-text small text-muted mb-2">${product.description}</p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="fw-bold text-primary">${formatPrice(product.price)}</span>
                                    <button class="btn btn-success btn-sm" onclick="event.stopPropagation(); addToCart('${product.id}')">
                                        <i class="bi bi-plus-circle me-1"></i>Thêm
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
        }

        // Add to Cart
        function addToCart(productId) {
            const product = products.find(p => p.id === productId);
            if (!product) return;

            const existingItem = cart.find(item => item.id === productId);

            if (existingItem) {
                existingItem.quantity += 1;
            } else {
                cart.push({
                    id: productId,
                    name: product.name,
                    price: product.price,
                    image: product.image,
                    quantity: 1
                });
            }

            updateCartDisplay();
            showToast(`Đã thêm ${product.name} vào đơn hàng`, 'success');
        }

        // Update Cart Display
        function updateCartDisplay() {
            updateCartItems();
            updateCartSummary();
            updateCartCounts();
            updateCreateOrderButton();
        }

        // Update Cart Items
        function updateCartItems() {
            const cartItemsDesktop = document.getElementById('cartItems');
            const cartItemsMobile = document.getElementById('mobileCartItems');

            if (cart.length === 0) {
                const emptyCartHtml = `
                        <div class="text-center py-4 text-muted">
                            <i class="bi bi-cart3" style="font-size: 2rem;"></i>
                            <p class="mt-2 mb-0">Chưa có sản phẩm nào</p>
                        </div>
                    `;
                cartItemsDesktop.innerHTML = emptyCartHtml;
                cartItemsMobile.innerHTML = emptyCartHtml;
                return;
            }

            const cartItemsHtml = cart.map(item => `
                    <div class="cart-item">
                        <div class="d-flex align-items-center">
                            <img src="${item.image}" alt="${item.name}" class="me-3" style="width: 50px; height: 50px; object-fit: cover; border-radius: 6px;">
                            <div class="flex-grow-1">
                                <h6 class="mb-1">${item.name}</h6>
                                <small class="text-muted">${formatPrice(item.price)}</small>
                            </div>
                            <div class="d-flex align-items-center">
                                <button class="btn btn-outline-secondary btn-sm me-2" onclick="updateQuantity('${item.id}', ${item.quantity - 1})">
                                    <i class="bi bi-dash"></i>
                                </button>
                                <span class="mx-2">${item.quantity}</span>
                                <button class="btn btn-outline-secondary btn-sm ms-2" onclick="updateQuantity('${item.id}', ${item.quantity + 1})">
                                    <i class="bi bi-plus"></i>
                                </button>
                            </div>
                        </div>
                        <div class="d-flex justify-content-between align-items-center mt-2">
                            <small class="text-muted">Tổng: ${formatPrice(item.price * item.quantity)}</small>
                            <button class="btn btn-outline-danger btn-sm" onclick="removeFromCart('${item.id}')">
                                <i class="bi bi-trash"></i>
                            </button>
                        </div>
                    </div>
                `).join('');

            cartItemsDesktop.innerHTML = cartItemsHtml;
            cartItemsMobile.innerHTML = cartItemsHtml;
        }

        // Update Quantity
        function updateQuantity(productId, newQuantity) {
            if (newQuantity <= 0) {
                removeFromCart(productId);
                return;
            }

            const item = cart.find(item => item.id === productId);
            if (item) {
                item.quantity = newQuantity;
                updateCartDisplay();
            }
        }

        // Remove from Cart
        function removeFromCart(productId) {
            cart = cart.filter(item => item.id !== productId);
            updateCartDisplay();
            showToast('Đã xóa sản phẩm khỏi đơn hàng', 'info');
        }

        // Update Cart Summary
        function updateCartSummary() {
            const cartSummary = document.getElementById('cartSummary');

            if (cart.length === 0) {
                cartSummary.classList.add('d-none');
                return;
            }

            const subtotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
            const tax = Math.round(subtotal * 0.08);
            const total = subtotal + tax;

            document.getElementById('subtotal').textContent = formatPrice(subtotal);
            document.getElementById('tax').textContent = formatPrice(tax);
            document.getElementById('total').textContent = formatPrice(total);

            cartSummary.classList.remove('d-none');
        }

        // Update Cart Counts
        function updateCartCounts() {
            const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
            document.getElementById('cartItemCount').textContent = totalItems;
            document.getElementById('mobileCartCount').textContent = totalItems;
        }

        // Update Create Order Button
        function updateCreateOrderButton() {
            const hasItems = cart.length > 0;
            const hasOrderType = selectedOrderType !== null;
            const canCreateOrder = hasItems && hasOrderType;

            document.getElementById('createOrderBtn').disabled = !canCreateOrder;
        }

        // Search Products
        function searchProducts() {
            displayProducts();
        }

        // Create Order
        function createOrder() {
            if (cart.length === 0 || !selectedOrderType) {
                showToast('Vui lòng chọn loại đơn hàng và thêm sản phẩm!', 'warning');
                return;
            }

            const orderId = `ORD${Date.now().toString().slice(-6)}`;

            // Show success modal
            document.getElementById('newOrderId').textContent = orderId;
            const successModal = new bootstrap.Modal(document.getElementById('successModal'));
            successModal.show();
        }

        // Create New Order
        function createNewOrder() {
            cart = [];
            selectedOrderType = null;
            currentCategory = 'all';

            document.querySelectorAll('.order-type-card').forEach(card => {
                card.classList.remove('selected');
            });

            document.getElementById('selectedOrderType').classList.add('d-none');
            document.getElementById('searchInput').value = '';

            updateCartDisplay();
            filterByCategory('all');

            const successModal = bootstrap.Modal.getInstance(document.getElementById('successModal'));
            successModal.hide();

            showToast('Đã tạo đơn hàng mới!', 'success');
        }

        // Format Price
        function formatPrice(price) {
            return new Intl.NumberFormat('vi-VN', {
                style: 'currency',
                currency: 'VND'
            }).format(price);
        }

        // Show Toast
        function showToast(message, type = 'info') {
            const toastColors = {
                success: 'bg-success',
                error: 'bg-danger',
                warning: 'bg-warning',
                info: 'bg-info'
            };

            const toastHtml = `
                    <div class="toast align-items-center text-white ${toastColors[type]} border-0" role="alert">
                        <div class="d-flex">
                            <div class="toast-body">${message}</div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                        </div>
                    </div>
                `;

            let toastContainer = document.getElementById('toastContainer');
            if (!toastContainer) {
                toastContainer = document.createElement('div');
                toastContainer.id = 'toastContainer';
                toastContainer.className = 'toast-container position-fixed top-0 end-0 p-3';
                toastContainer.style.zIndex = '9999';
                document.body.appendChild(toastContainer);
            }

            toastContainer.insertAdjacentHTML('beforeend', toastHtml);

            const toastElement = toastContainer.lastElementChild;
            const toast = new bootstrap.Toast(toastElement, { delay: 3000 });
            toast.show();

            toastElement.addEventListener('hidden.bs.toast', () => {
                toastElement.remove();
            });
        }
    </script>
</body>
</html>
